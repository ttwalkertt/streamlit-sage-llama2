import streamlit as st
import os

system_prompt_file = "system_prompt_library.txt"
default_system_prompts = [
            """Below are a series of dialogues between various people and an AI assistant. 
                      The AI tries to be helpful, polite, honest, sophisticated, emotionally aware, 
                      and humble-but-knowledgeable. The assistant is happy to help with almost anything, 
                      and will do its best to understand exactly what is needed. 
                      It also tries to avoid giving false or misleading information, 
                      and it caveats when it isn't entirely sure about the right answer. 
                      That said, the assistant is practical and really does its best, 
                      and doesn't let caution get too much in the way of being useful.""",
            """You are a helpful, respectful and honest assistant. Always answer as helpfully as possible, 
                      while being safe. Your answers should not include any harmful, unethical, racist, sexist, 
                      toxic, dangerous, or illegal content. Please ensure that your responses are socially 
                      unbiased and positive in nature.If a question does not make any sense, or is not factually coherent, 
                      explain why instead of answering something not correct. If you don't know the answer to a question, 
                      please don't share false information."""
        ]

def display_prompts_with_radio_and_delete_button():
    """
    Display a list of system prompts with radio buttons and a delete button.
    
    Returns:
    - None
    """
    st.title("System Prompts")
    
    # Load system prompts from system_prompt.txt
    try:
        with open(system_prompt_file, "r") as f:
            system_prompts = f.read().splitlines()
    except FileNotFoundError:
        # Default system prompts
        system_prompts = default_system_prompts
    
    # Initialize st.session_state.system_prompt if not
    if "selected_system_prompt" not in st.session_state:
        st.session_state.selected_system_prompt = ""

    # Display radio buttons next to each prompt
    selected_prompt = st.radio("Select a system prompt:", system_prompts)
    
    # Display the selected prompt
    if selected_prompt:
        st.session_state.selected_system_prompt = selected_prompt
        st.write(f"You have selected: {st.session_state.selected_system_prompt}")
    
    # Delete button to archive the selected prompt
    if st.button("Delete"):
        if selected_prompt:
            # Remove the selected prompt from the original list
            system_prompts.remove(selected_prompt)
            # Save the updated list to the file
            with open(system_prompt_file, "w") as f:
                for prompt in system_prompts:
                    prompt = prompt.replace('\n',' ')
                    f.write(f"{prompt}\n")
            st.write(f"{selected_prompt} has been archived.")
            st.experimental_rerun()
        else:
            st.write("No prompt selected to delete.")
    
    if st.button("Reset"):
        system_prompts = default_system_prompts
        with open(system_prompt_file, "w") as f:
                for prompt in system_prompts:
                    prompt = prompt.replace('\n',' ')
                    f.write(f"{prompt}\n")
        st.experimental_rerun()
         
    
    # Text input box for new system prompt
    new_prompt = st.text_input("Add a new system prompt:")
    
    # Button to add new system prompt
    if st.button("Add System Prompt"):
        if new_prompt:
            # Add the new prompt to the list
            system_prompts.append(new_prompt)
            # Save the updated list to the file
            with open("system_prompt.txt", "w") as f:
                for prompt in system_prompts:
                    prompt = prompt.replace('\n',' ')
                    f.write(f"{prompt}\n")
            # Make the new prompt the selected one
            st.session_state.selected_system_prompt = new_prompt
            st.write(f"New system prompt added: {new_prompt}")
            st.experimental_rerun()

# Call the function to display the prompts with radio buttons and delete button
display_prompts_with_radio_and_delete_button()
